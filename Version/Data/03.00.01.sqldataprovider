-- MODULE         : DNNSTUFF - AGGREGATOR - DNN3
-- VERSION        : 03.00.01
-- 20/MAR/2005    : FIXES PROBLEM WHERE 'ALL TABS' MODULES ARE SHOWN MORE THAN ONCE IN SELECTOR DROPDOWN


SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

ALTER procedure {databaseOwner}{objectQualifier}DNNStuff_Aggregator_GetTabModules
(
@TabId int,
@ModuleId int
)
AS

-- Delete any modules that have been orphaned by a user delete of an aggregator
DELETE FROM {databaseOwner}{objectQualifier}DNNStuff_Aggregator_Aggregator WHERE ModuleId NOT IN (SELECT ModuleId FROM {databaseOwner}{objectQualifier}Modules WHERE IsDeleted = 0)

DECLARE @PortalId int
SELECT @PortalId = PortalId FROM {databaseOwner}{objectQualifier}Tabs WHERE TabId = @TabId

-- Now, select remaining
SELECT TM.TabModuleId, M.ModuleId, '' AS ModuleTitle FROM {databaseOwner}{objectQualifier}TabModules TM 
INNER JOIN {databaseOwner}{objectQualifier}Modules M ON TM.ModuleId = M.ModuleId
INNER JOIN {databaseOwner}{objectQualifier}Tabs T ON T.TabId = TM.TabId
WHERE
	-- this tab
	TM.TabId = @TabId
		AND
	-- not this module
	TM.ModuleId <> @ModuleId
		AND
	-- not deleted
	M.IsDeleted <> 1
		AND
	-- not already aggregated in this tab
	TM.TabModuleId NOT IN (SELECT A.TabModuleId FROM {databaseOwner}{objectQualifier}DNNStuff_Aggregator_Aggregator A INNER JOIN {databaseOwner}{objectQualifier}TabModules TM ON A.TabModuleId = TM.TabModuleId INNER JOIN {databaseOwner}{objectQualifier}Modules M ON TM.ModuleId = M.ModuleId WHERE (TM.TabId = @TabId AND M.AllTabs=0) OR A.ModuleId = @ModuleId)
		AND
	-- not an aggregator itself
	M.ModuleId NOT IN (SELECT ModuleId FROM {databaseOwner}{objectQualifier}DNNStuff_Aggregator_Aggregator)
		AND
	-- same portal
	T.PortalId = @PortalId
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

